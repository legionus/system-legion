#!/bin/sh -efu

# shellcheck enable=all disable=SC2250,SC3043

fatal() {
	printf '%s\n' "$0: $*" >&2
	exit 1
}

prog="${0##*/}"
case "$prog" in
	ifup)
		updown=up
		startstop=start
		;;
	ifdown)
		updown=down
		startstop=stop
		;;
	*) fatal "$prog mode is not supported" ;;
esac

real=/sbin/"$prog"
if [ -x "$real" ]; then
	exec "$real" "$@"
fi

ifname="$1"; shift
subconf=

if [ -z "${ifname%%*@*}" ]; then
	subconf="${ifname#*@}"
	ifname="${ifname%@*}"
fi

[ "$#" = 0 ] ||
	fatal 'too many arguments'

[ -d /sys/class/net/"$ifname" ] ||
	fatal "$ifname does not exist"

do_wifi() {
	local ifname="$1"; shift
	local subconf="${1-}"; shift
	local service=

	service=wpa_supplicant@"$ifname".service
	if [ -n "$subconf" ]; then
		# This service is homegrown because systemd doesn't support
		# services with two parameters (interface name and config in
		# this case).
		service=wpa_supplicant-"$ifname"@"$subconf".service
	fi
	systemctl "$startstop" "$service"
}

if [ "$startstop" = start ]; then
	systemctl "$startstop" systemd-networkd.service
fi

case "$ifname"  in
	wifi*|wlan*)
		networkctl "$updown" "$ifname"
		do_wifi "$ifname" "$subconf"
		;;
	*)
		networkctl "$updown" "$ifname"
		;;
esac

systemctl "$startstop" systemd-resolved.service

#!/bin/sh

set -efu

tmpdir=
cleanup_tmpdir()
{
	[ -z "$tmpdir" ] || rm -rf -- "$tmpdir"
	exit "$@"
}

tmpdir=$(mktemp -dt "${0##*/}.XXXXXXXX")
trap 'cleanup_tmpdir $?' EXIT
trap 'exit 143' HUP INT QUIT PIPE TERM

cd /mnt/pvt/bootloader
mountpoint -q .

find_images() {
	local dir
	local image
	local vmlinuz
	local initrd

	set +f
	for dir in petitboot-*; do
		[ -d "$dir" ] || continue
		for vmlinuz in "$dir"/vmlinuz-*; do
			[ ! -f "$vmlinuz" ] ||
				break
		done
		for initrd in "$dir"/initrd-*.img; do
			[ ! -f "$initrd" ] ||
				break
		done
		vmlinuz="$(basename "$vmlinuz")"
		initrd="$(basename "$initrd")"
		echo "$dir" "$vmlinuz" "$initrd"
		continue
	done
}

find_images > "$tmpdir"/images

sort -n -r -o "$tmpdir"/images{,}

gen_entry() {
	local image="$1"; shift
	local name="$1"; shift
	local vmlinuz="$1"; shift
	local version="${vmlinuz#vmlinuz-}"
	local initrd="$1"; shift

	if [ ! -s "$image/$vmlinuz" ] || [ ! -s "$image/$initrd" ]; then
		echo "$image system image is unbootable" >&2
		exit 1
	fi
	echo "Adding: '$name ($version)' entry" >&2
	cat <<@@@
menuentry "$name ($version)" {
	linux	/$image/$vmlinuz ro panic=30 quiet
	initrd  /$image/$initrd
}

@@@
}

cat <<'@@@'
set timeout=1
set default=0

@@@

while read dir vmlinuz initrd ; do {
	gen_entry "$dir" "$dir" "$vmlinuz" "$initrd"
} </dev/null; done <"$tmpdir"/images
